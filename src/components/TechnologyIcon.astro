---
import technologies from '../data/technologies-data.json';

import { 
  SiAstro, SiTypescript, SiTailwindcss, SiMysql, SiMedusa
} from 'react-icons/si';
import { 
  FaReact, FaNodeJs, FaSass, FaWordpress, FaPhp, FaAws, FaGithub, FaLinkedin 
} from 'react-icons/fa';
import { MdTranslate, MdEmail } from 'react-icons/md';
import { IoLogoJavascript } from 'react-icons/io5';
import { DiMongodb, DiRedis } from 'react-icons/di';
import { BiLogoPostgresql } from 'react-icons/bi';
import { RiNextjsLine } from 'react-icons/ri';
import { BsBootstrap } from 'react-icons/bs'; 
import { GrGraphQl } from 'react-icons/gr';   

export interface Props {
  type: keyof typeof technologies;
  className?: string;
  link?: string;
}

const { type, className, link } = Astro.props;
const techInfo = technologies[type];

const iconMap = {
  'MdTranslate': MdTranslate,
  'MdEmail': MdEmail,
  'SiAstro': SiAstro,
  'FaReact': FaReact,
  'FaNodeJs': FaNodeJs,
  'SiTypescript': SiTypescript,
  'IoLogoJavascript': IoLogoJavascript,
  'SiTailwindcss': SiTailwindcss,
  'BsBootstrap': BsBootstrap,
  'FaSass': FaSass,
  'GrGraphQl': GrGraphQl,
  'DiMongodb': DiMongodb,
  'FaWordpress': FaWordpress,
  'SiMysql': SiMysql,
  'FaPhp': FaPhp,
  'SiMedusa': SiMedusa,
  'BiLogoPostgresql': BiLogoPostgresql,
  'RiNextjsLine': RiNextjsLine,
  'DiRedis': DiRedis,
  'FaAws': FaAws,
  'FaGithub': FaGithub,
  'FaLinkedin': FaLinkedin
};

const iconInitial = techInfo?.name?.[0]?.toUpperCase() || '?';
const IconComponent = techInfo?.iconIdentifier ? iconMap[techInfo.iconIdentifier] : null;

const isLargeIcon = className && (className.includes('w-16') || className.includes('h-16'));
const containerSize = isLargeIcon ? 'w-16 h-16' : 'w-10 h-10';
const iconSize = isLargeIcon ? 'w-10 h-10' : 'w-7 h-7';
const textSize = isLargeIcon ? 'text-lg' : 'text-xs';

const Wrapper = link ? 'a' : 'div';
const wrapperProps = link ? { href: link, target: "_blank", rel: "noopener noreferrer" } : {};

const payloadSvg = `<svg class="${iconSize}" viewBox="0 0 64 64" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_5502_5150)"><path d="M31.6691 54.0945L13.0441 43.3445C12.8129 43.207 12.6691 42.9633 12.6691 42.6945V26.0945C12.6691 25.807 12.9816 25.6258 13.2316 25.7695L34.8566 38.257C35.1566 38.432 35.5379 38.2133 35.5379 37.8633V29.7633C35.5379 29.4383 35.3629 29.1445 35.0879 28.982L9.06289 13.9508C8.83164 13.8133 8.54414 13.8133 8.30664 13.9508L4.90039 15.9195C4.66914 16.057 4.52539 16.3008 4.52539 16.5695V47.4258C4.52539 47.6945 4.66914 47.9445 4.90039 48.0758L31.6191 63.5008C31.8504 63.6383 32.1379 63.6383 32.3754 63.5008L54.8129 50.5445C55.1129 50.3695 55.1129 49.9383 54.8129 49.7633L47.8129 45.7195C47.5316 45.557 47.1879 45.557 46.9066 45.7195L32.4191 54.082C32.1879 54.2195 31.9004 54.2195 31.6629 54.082L31.6691 54.0945Z" fill="white"/><path d="M59.0998 15.9187L32.3748 0.49375C32.1436 0.35625 31.8561 0.35625 31.6186 0.49375L17.4936 8.65C17.1936 8.825 17.1936 9.25625 17.4936 9.43125L24.4311 13.4375C24.7123 13.6 25.0561 13.6 25.3373 13.4375L31.6623 9.7875C31.8936 9.65 32.1811 9.65 32.4186 9.7875L51.0436 20.5375C51.2748 20.675 51.4186 20.9188 51.4186 21.1875V37.875C51.4186 38.2 51.5936 38.4937 51.8686 38.6562L58.7936 42.6562C59.0936 42.8313 59.4748 42.6125 59.4748 42.2625V16.575C59.4748 16.3063 59.3311 16.0562 59.0998 15.925V15.9187Z" fill="white"/></g><defs><clipPath id="clip0_5502_5150"><rect width="64" height="64" fill="white"/></clipPath></defs></svg>`;
---

<Wrapper {...wrapperProps}>
  <div class="relative inline-flex flex-col items-center group mx-0.5">
    <div
      class:list={[
        "flex aspect-square items-center justify-center rounded-full text-white transition-transform duration-200 ease-out hover:scale-110 ring-1 ring-black/5",
        containerSize
      ]}
      style={{
        background: `conic-gradient(from 220deg at 50% 50%, color-mix(in oklch, var(--color-accent) 22%, ${techInfo?.iconBg || '#9ca3af'}) 0 25%, ${techInfo?.iconBg || '#9ca3af'} 25% 100%)`
      }}
    >
      {type === 'payload' ? (
        <Fragment set:html={payloadSvg} />
      ) : IconComponent ? (
        <IconComponent class={iconSize} />
      ) : (
        <span class:list={["font-bold p-1 text-center leading-tight", textSize]}>
          {iconInitial}
        </span>
      )}
    </div>
    <div class="absolute top-full mt-2 bg-background-tertiary text-label-primary text-xs font-medium py-1.5 px-2.5 rounded-md whitespace-nowrap opacity-0 group-hover:opacity-100 transition-opacity duration-150 ease-out pointer-events-none shadow-md z-30 group-hover:delay-300">
      {techInfo?.name || 'Unknown'}
    </div>
  </div>
</Wrapper>
