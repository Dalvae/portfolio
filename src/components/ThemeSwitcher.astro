---
const themeScript = `
document.addEventListener('DOMContentLoaded', () => {
  const themeSwitcher = document.querySelector('#theme-switcher');
  if (!themeSwitcher) return;
  const buttons = themeSwitcher.querySelectorAll('.theme-button');
  const indicator = themeSwitcher.querySelector('.theme-indicator');
  const htmlEl = document.documentElement;
  
  function applyTheme(theme) {
    htmlEl.classList.toggle('dark', theme === 'dark');
    localStorage.setItem('theme', theme);
  }
  
  function updateIndicator(theme) {
    const positions = { light: 0, dark: 33 }; 
    if (indicator) {
        indicator.style.transform = \`translateX(\${positions[theme] || 0}px)\`;
    }
  }
  
  const currentTheme = localStorage.getItem('theme');
  updateIndicator(currentTheme); 
  
  buttons.forEach(button => {
    button.addEventListener('click', () => {
      const themeToSet = button.dataset.theme;
      if (themeToSet) {
        applyTheme(themeToSet);
        updateIndicator(themeToSet);
      }
    });
  });
});
`;
---

<style>
  .theme-switcher {
    position: relative;
    display: inline-flex;
    border-radius: 9999px;
    border: 1px solid var(--color-grey4);
    padding: 3px;
    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  }
  
  .dark .theme-switcher {
    border-color: var(--color-grey3);
    background-color: var(--color-background-secondary); 
  }
  
  .theme-button {
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 32px;
    height: 32px;
    border-radius: 9999px;
    border: none;
    background: transparent;
    color: var(--color-label-primary);
    cursor: pointer;
    transition: color 0.2s ease;
    z-index: 10; 
  }
  
  .dark .theme-button {
    color: var(--color-label-secondary);
  }
  
  .theme-button svg {
    width: 16px;
    height: 16px;
  }
  
  /* Estilos específicos para el icono del sol (light theme) */
  .theme-button[data-theme="light"] svg {
    stroke: white; /* Siempre blanco */
  }
  
  /* Estilos específicos para el icono de la luna (dark theme) */
  .theme-button[data-theme="dark"] svg {
    stroke: currentColor; /* Usa el color heredado */
  }
  
  .theme-indicator {
    position: absolute;
    top: 3px; 
    left: 3px; 
    width: 32px; 
    height: 32px; 
    border-radius: 9999px;
    background-color: var(--color-accent); 
    box-shadow: 0 1px 3px 0 rgba(0,0,0,0.1), 0 1px 2px 0 rgba(0,0,0,0.06);
    transition: transform 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    z-index: 5; 
  }
</style>

<div id="theme-switcher" class="theme-switcher">
  <button 
    class="theme-button" 
    data-theme="light"
    aria-label="Switch to light theme"
  >
    <!-- Removí las clases de Tailwind conflictivas del SVG -->
    <svg fill="none" height="24" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" viewBox="0 0 24 24" width="24">
      <circle cx="12" cy="12" r="5" />
      <path d="M12 1v2M12 21v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42" />
    </svg>
  </button>
  
  <button 
    class="theme-button" 
    data-theme="dark"
    aria-label="Switch to dark theme"
  >
    <svg fill="none" height="24" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" viewBox="0 0 24 24" width="24">
      <path d="M21 12.79A9 9 0 1111.21 3 7 7 0 0021 12.79z" />
    </svg>
  </button>
  
  <div class="theme-indicator"></div>
</div>

<script is:inline set:html={themeScript}></script>
